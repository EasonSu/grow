<?php

namespace Automattic\WooCommerce\Grow\WR\Commands;

use InvalidArgumentException;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use WR\Command\Release;

/**
 * Class Bulk
 *
 * @since %VERSION%
 */
class Bulk extends Command
{
	/**
	 * Configures the current command.
	 */
	protected function configure()
	{
		$this
			->setName('bulk')
			->setDescription('Run a bulk simulate or release.')
			->addArgument(
				'release-command',
				InputArgument::REQUIRED,
				'The command to run in bulk.'
			);
	}

	/**
	 * Initializes the command after the input has been bound and before the input
	 * is validated.
	 *
	 * This is mainly useful when a lot of commands extends one main command
	 * where some things need to be initialized based on the input arguments and options.
	 *
	 * @see InputInterface::bind()
	 * @see InputInterface::validate()
	 */
	protected function initialize(InputInterface $input, OutputInterface $output)
	{
		// This throws an exception if the command is not found, which we want to allow.
		$command = $this->getApplication()->get($input->getArgument('release-command'));
		if (!$command instanceof Release) {
			throw new InvalidArgumentException(
				sprintf(
					'Command "%s" is not an instance of %s',
					$command->getName(),
					Release::class
				)
			);
		}

		$commandDefinition = $command->getDefinition();
	}

	/**
	 * Executes the current command.
	 *
	 * This method is not abstract because you can use this class
	 * as a concrete class. In this case, instead of defining the
	 * execute() method, you set the code to execute by passing
	 * a Closure to the setCode() method.
	 *
	 * @return int 0 if everything went fine, or an exit code
	 *
	 * @throws LogicException When this abstract method is not implemented
	 *
	 * @see setCode()
	 */
	protected function execute(InputInterface $input, OutputInterface $output)
	{
		parent::execute($input, $output); // TODO: Change the autogenerated stub
	}
}
